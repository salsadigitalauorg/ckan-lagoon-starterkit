version: '2.3'

x-lagoon-project:
  # Lagoon project name (leave `&lagoon-project` when you edit this)
  &lagoon-project ckan-example

x-volumes:
  &default-volumes
    # Define all volumes you would like to have real-time mounted into the docker containers
    volumes:
      - ./files:/app/filestore:delegated

x-environment:
  &default-environment
    LAGOON_PROJECT: *lagoon-project
    LAGOON_ENVIRONMENT_TYPE: production

x-user:
  &default-user
    # The default user under which the containers should run. Change this if you are on linux and run with another user than id `1000`
    user: '1000'

services:

  postgres:
    image: lagoon/postgres-ckan
    labels:
      lagoon.type: postgres
    ports:
      - "5432" # exposes the port 5432 with a random local port, find it with `docker-compose port postgres 5432`
    networks:
      - bridge
    << : *default-user # uses the defined user from top
    environment:
      << : *default-environment

  postgres-datastore:
    image: lagoon/postgres-ckan
    labels:
      lagoon.type: postgres
    ports:
      - "5432" # exposes the port 5432 with a random local port, find it with `docker-compose port postgres 5432`
    networks:
      - bridge
    << : *default-user # uses the defined user from top
    environment:
      << : *default-environment

  ckan:
    build:
      context: .
      dockerfile: .docker/Dockerfile.ckan
    networks:
      - bridge
      - amazeeio-network
      - default
    ports:
      - "80"
    image: *lagoon-project
    labels:
      # Lagoon Labels
      lagoon.persistent.name: ckan
      lagoon.persistent: /app/filestore/
    << : *default-volumes # loads the defined volumes from the top
    environment:
      - AMAZEEIO_URL=ckan-example.docker.amazee.io
      - AMAZEEIO=AMAZEEIO
      - AMAZEEIO_HTTP_PORT=80
      - LAGOON_ROUTE=http://ckan-example.docker.amazee.io
      - LAGOON_ENVIRONMENT_TYPE=production
      - LAGOON_PROJECT=ckan-example

  ckan-datapusher:
    image: lagoon/python:2.7.15-ckandatapusher
    ports:
      - "8800"
    networks:
      - bridge
    links:
      - "ckan:ckan-example.docker.amazee.io"
    << : *default-user # uses the defined user from top
    environment:
      << : *default-environment

  redis:
    image: amazeeio/redis
    labels:
      lagoon.type: redis
    networks:
      - bridge
    << : *default-user # uses the defined user from top
    environment:
      << : *default-environment

  solr:
    build:
      context: .
      dockerfile: .docker/Dockerfile.solr
    networks:
      - bridge
    labels:
      lagoon.type: solr
    user: '8983'
    ports:
      - "8983" # exposes the port 8983 with a random local port, find it with `docker-compose port solr 8983`
    environment:
      << : *default-environment

volumes:
  solr-data:

networks:
  amazeeio-network:
    external: true
  bridge:
    driver: "bridge"
